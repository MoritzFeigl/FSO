% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable_input.R
\name{variable_input}
\alias{variable_input}
\title{variable_input}
\usage{
variable_input(
  functions,
  variable_list,
  single_var_to_remove = NULL,
  necessary_var_to_be_included = NULL,
  n_iter = 100,
  no_cores = NULL,
  seed = NULL,
  file_name = NULL
)
}
\arguments{
\item{functions}{A character vector or data frame (ncol = 1) of function strings.}

\item{n_iter}{Number of samples produced for a single functions.}

\item{no_cores}{Integer Number of cores to be used for computation, or NULL to set number of cores to parallel::detectCores()-2 or 1}

\item{seed}{An integer to be supplied to set.seed, or NULL not to set reproducible seeds.}

\item{variables}{A character vector with variable names that should be sampled from.}

\item{numbers}{A numeric vector with numbers that should be sampled from}

\item{var_string}{Character used for variables in functions.}

\item{num_string}{Character used for numebrs in functions.}

\item{save}{TRUE/FALSE, if a .feather of the output should be saved in the current working directory.}
}
\value{
Returns a data frame with all sampled functions.
}
\description{
variable_input
}
\examples{
simple_grammar <- create_grammar(a = "<b><op><c>, <a><op><b>, <a><op><c>, 1",
                                 b = "var, numeric",
                                 c = "var, numeric",
                                 op = "+, -")
\dontrun{
grammar_functions <- grammar_sampler(n = 10,
                                     grammar = simple_grammar,
                                     max_depth = 5,
                                     no_cores = 1,
                                     save = FALSE)
variables <- c("x", "y")
numbers <- seq(1, 10, 1)

sampled_functions <- variable_input(functions = grammar_functions,
                                    variables = variables, numbers = numbers,
                                    n_iter = 100, no_cores = 1,
                                    var_string = "var", num_string = "numeric",
                                    seed = NULL, save = FALSE)

}
}

sample.interval=20000
"cb$putcode" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"as.list" "alist" "as.pairlist" "eval" "wrap_function" "FUN" "lapply" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"gregexpr" "regmatches" "function_list[[i]]" "freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"as.list" "alist" "as.pairlist" "eval" "wrap_function" "FUN" "lapply" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"as.pairlist" "eval" "wrap_function" "FUN" "lapply" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"sub" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"eval" "wrap_function" "FUN" "lapply" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"%>%" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"gregexpr" "regmatches<-" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"lapply" "regmatches<-" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"rev" "split_chain" "%>%" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"freduce" "_fseq" "eval" "eval" "withVisible" "%>%" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"sample.int" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"as.call" "prepare_first" "split_chain" "%>%" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"vapply" "is_first" "split_chain" "%>%" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"eval" "withVisible" "%>%" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"paste0" "<Anonymous>" "mapply" "Map" "regmatches<-" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"as.list" "prepare_first" "split_chain" "%>%" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"rev" "split_chain" "%>%" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
"lapply" "unlist" "regmatches" "regmatches<-" "f" "cfg" "FUN" "lapply" "sapply" "replicate" 
